services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.retention.size=30GB
      - --web.enable-lifecycle
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - vergeos-exporter
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring

  vergeos-exporter:
    # Uses a prebuilt binary from GitHub Releases wrapped in a tiny image
    build:
      context: ./vergeos-exporter
      args:
        VER: ${EXPORTER_VERSION:-1.1.9}   # exporter release (no leading "v")
        OS: Linux
        ARCH: ${EXPORTER_ARCH:-x86_64}    # x86_64 or arm64
    container_name: vergeos-exporter
    restart: unless-stopped
    environment:
      VERGE_URL: ${VERGE_URL}
      VERGE_USERNAME: ${VERGE_USERNAME}
      VERGE_PASSWORD: ${VERGE_PASSWORD}
      WEB_LISTEN: ":9888"
    command:
      - "-verge.url=${VERGE_URL}"
      - "-verge.username=${VERGE_USERNAME}"
      - "-verge.password=${VERGE_PASSWORD}"
      - "-web.listen-address=${WEB_LISTEN}"
    ports:
      - "9888:9888"
    networks:
      - monitoring

networks:
  monitoring: {}

volumes:
  prometheus_data: {}
  grafana_data: {}
